LOG

03/26: Wrote proposal for Monopoly Deal
03/27: Drew out diagram of the three classes (Player, Card, Deck), and their respective subcalsses: 
      
       Player (void act //draw two cards and make three moves) *instance variables: AL _hand, AL of LL of _properties, BST _money)   
           ComputerPlayer
               A (instanceOf CP)
               B (instanceOf CP)
               C (instanceOf CP)
           Me
       Card (int getValue, String getName, boolean inField)
           MoneyCard
           ActionCard
               Rent
               IMB //it's my birthday
               SlyDeal
               ForcedDeal
           PropertyCard
               Blue
               Yellow
               Orange
               Green
               Pink
       Deck (void shuffle)
         
03/28: Refined, changed a few of the methods and instance variables, etc. (Look above)
       Divided work for tonight:
           Julie: PropertyCard
                  MoneyCard
           Alicia: ActionCard
                   Maybe start working on Player
           *Somebody write Card class so we can start working on subclasses
           *Think about how to call on next player, looping, interaction between players, etc. 
03/28: Alicia: Put down draw2 and checkHand methods for player. 
               Created Card and YellowPropertyCard classes and put in basic variables and return methods.
03/29: TO DO:
       PHASE 1: Create all the cards & place in deck randomly (stack)
       PHASE 2: Create Player methods for a turn
       PHASE 3: Make the game playable for 4 players
       PHASE 4: Create the computer players and make single player list
       
       (PHASE1 and PHASE2 can be done simultanetously)
       We are currently on PHASE1 and PHASE2
       
       Julie: Added methods to Card Class, methods and attributes to PropertyCard Class
              Created all of the color classes under property, wrote some main methods
       Alicia: Edited Player Class: added display method, added description attribute to property and money cards.
05/29: Alicia Added SlyDeal class. Created a use method for action cards in Player. 
              Need to work on actually putting the SlyDeal card to use.
05/30: Throw/catch in Player Class (line 51: if the input type is not an integer)
06/01: Alicia: updated Player class. modified methods checkColor and useSlyDeal. 
06/02: UML Diagram, Added LList BST CLList, Debugged Player class but not completely ):, deleted SlyDeal class and modified ActionCard class 
06/02: Alicia: added getType to Card class, added money constructor to card class, made PropertyCard class simpler, fixed some bugs we are down to 27 now...
06/03: Debugged, down to 20!!! Added RQueue and LLNode classes, add getDescription() to card class, added to UML diagram
06/04: Cleaned up code, changed the placeInProperties method in Player. The ArrayList of LList of property cards will now have 5 empty slots from the start, so that all of the colors in everyone's hands are in the same order and easier to access (index 0 is Blue, index 1 is Yellow, etc.)
       Deciphering whether or not to change the Rent in ActionCard so that Rent cards get a color attribute that returns an ArrayList of the colors that this specific Rent card calls for. 
       **ASK ALICIA are we not writing a MoneyCard clasS? Just keeping Card as MoneyCard, and overriding for Action and Property Card classes?
       Added an additional display method that takes an LList, so that we can display both the cards in the hand and the property cards in the LList's...
06/06: Alicia: fixed placeInProperties method in Player so that we can have more than 5 colors of properties, no more preassigned slots
       Also changed display methods so that we now have a display(ArrayList<Card> cards) and a displayProperties method.
06/09: Alicia: Player.java has one error left. lots of problems solved by casting object as a Card class
06/10: Alicia: Added a bunch of main methods to make the deck. added turn() method to player class and instead of throw catch for checking if a response is  an int, I added a seperate method to actually check and return a boolean.
       *Need a subcalss for rent cards since they have an extra attribute regular action cards do not have UPDATE: Done
06/11: Alicia: tried to get the CLList mechanism working. had to add Rqueue deck and CLList players as parameters in the turn function. 
06/12: Alicia: added RentCard class with color attribute, added a sum method to BST, added onto getDesciption() for ActionCard class, began a pay(Player p, int debt) still needs to be complete, 
       Updated useActionCard() in player class
       *Still missing identifier problem in Driver class. Not sure how to fix this
